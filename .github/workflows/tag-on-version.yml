name: Release on new version tag

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current tag
        id: get_tag
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Get latest tag (excluding current)
        id: get_latest
        run: |
          LATEST=$(git tag --sort=-v:refname | grep -v "^${{ steps.get_tag.outputs.tag }}$" | head -n1 || echo "")
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Compare tags
        id: compare
        run: |
          CUR=${{ steps.get_tag.outputs.tag }}
          LATEST=${{ steps.get_latest.outputs.latest }}
          if [ -z "$LATEST" ] || { [ "$(printf '%s\n' "$CUR" "$LATEST" | sort -V | tail -n1)" = "$CUR" ] && [ "$CUR" != "$LATEST" ]; }; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Create zip for release
        if: steps.compare.outputs.should_release == 'true'
        run: |
          git archive --format zip --output update_test.zip HEAD

      - name: Create GitHub Release
        if: steps.compare.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: update_test.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
